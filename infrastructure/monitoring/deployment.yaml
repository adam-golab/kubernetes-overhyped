apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: prometheus-stack
  namespace: monitoring
spec:
  releaseName: prometheus-stack
  chart:
    repository: https://prometheus-community.github.io/helm-charts
    name: kube-prometheus-stack
    version: 9.4.4
  values:
    kubeEtcd:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false
    defaultRules:
      rules:
        kubeScheduler: false
        etcd: false
    grafana:
      enabled: true
      defaultDashboardsEnabled: true
      adminUser: admin
      adminPassword: <PASSWORD>
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
          - monitoring.devjs.ml
        path: /
        tls:
        - secretName: prometheus-stack-grafana-nginx-cert
          hosts:
          - monitoring.devjs.ml
      grafana.ini:
        server:
          root_url: ""
        smtp:
          enabled: true
          host: ""
      #   passwordKey: "password"
---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: prometheus-adapter
  namespace: monitoring
spec:
  releaseName: prometheus-adapter
  chart:
    repository: https://kubernetes-charts.storage.googleapis.com
    name: prometheus-adapter
    version: 2.5.1
  values:
    prometheus:
      url: http://prometheus-stack-kube-prom-prometheus
    rules:
      custom:
        - seriesQuery: '{__name__="nginx_ingress_controller_requests",namespace!=""}'
          resources:
            template: <<.Resource>>
            overrides:
              exported_namespace:
                resource: namespace
          name:
            matches: ""
            as: ""
          metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>})
          metricsQuery: round(sum(irate(<<.Series>>{<<.LabelMatchers>>}[2m])) by (ingress), 0.001)
